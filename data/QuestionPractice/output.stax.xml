<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Test>
    <Question>
        <QuestionText>
                Which statement is true given the following?
                Double d = Math.random();</QuestionText>
        <Answer>= 1.0</Answer>
        <Answer>Cannot say.</Answer>
        <Answer>Compilation fail</Answer>
        <Answer correct="true">x 1.0</Answer>
    </Question>
    <Question>
        <QuestionText>Which statement is true about a static nested class?</QuestionText>
        <Answer> It must extend the enclosing class.</Answer>
        <Answer correct="true">It does not have access to nonstatic members of the enclosing class.</Answer>
        <Answer>It's variables and methods must be static.</Answer>
        <Answer>You must have a reference to an instance of the enclosing class in order to instantiate it.</Answer>
    </Question>
    <Question>
        <QuestionText>
            Which collection class allows you to grow or shrink its size and provides indexed access to its elements,
            but whose methods are not synchronized?</QuestionText>
        <Answer correct="true">java.util.ArrayList</Answer>
        <Answer>java.util.HashSet</Answer>
        <Answer>java.util.LinkedHashSet</Answer>
        <Answer>java.util.List</Answer>
    </Question>
    <Question>
        <QuestionText>
            You want subclasses in any package to have access to members of a superclass.
            Which is the most restrictive access that accomplishes this objective?</QuestionText>
        <Answer>private</Answer>
        <Answer correct="true">protected</Answer>
        <Answer>public </Answer>
        <Answer>transient</Answer>
    </Question>
    <Question>
        <QuestionText>
            Which statement is true?
        </QuestionText>
        <Answer correct="true"> If a class has synchronized code, multiple threads can still access the nonsynchronized code.</Answer>
        <Answer>A static method cannot be synchronized.  </Answer>
        <Answer>Variables can be protected from concurrent access problems by marking them with the synchronized keyword. </Answer>
        <Answer>When a thread sleeps, it releases its locks.</Answer>
    </Question>
</Test>
